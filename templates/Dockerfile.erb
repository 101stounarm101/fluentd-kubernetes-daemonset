<% fluentd_ver = version.split("-").first %>
<% target = (dockerfile.split("/").last.split("-").last) %>
<% requires_git = %w(graylog syslog).include? target %>
<% is_alpine = (dockerfile.split("/").last.split("-").first == "alpine") %>
# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /templates/Dockerfile.erb

<% if is_alpine %>
FROM fluent/fluentd:<%= fluentd_ver %>
<% else %>
FROM fluent/fluentd:<%= fluentd_ver %>-debian
<% end %>

MAINTAINER Eduardo Silva <eduardo@treasure-data.com>
USER root
WORKDIR /home/fluent
ENV PATH /fluentd/vendor/bundle/ruby/2.3.0/bin:$PATH
ENV GEM_PATH /fluentd/vendor/bundle/ruby/2.3.0
ENV GEM_HOME /fluentd/vendor/bundle/ruby/2.3.0
# skip runtime bundler installation
ENV FLUENTD_DISABLE_BUNDLER_INJECTION 1

COPY Gemfile* /fluentd/
<% if is_alpine %>
RUN set -ex \
    && apk upgrade --no-cache \
    && apk add --no-cache ruby-bundler \
    && apk add --no-cache --virtual .build-deps \
        build-base \
        ruby-dev \
        libffi-dev \
<% if target == "graylog"%>
        zlib-dev \
<% end %>
<% if requires_git %>
        git \
<% end %>
<% else %>
  RUN buildDeps="sudo make gcc g++ libc-dev ruby-dev libffi-dev<% if target == "graylog" %> build-essential patch zlib1g-dev liblzma-dev<% end %><% if requires_git %> git<% end %>" \
     && apt-get update \
     && apt-get upgrade -y \
     && apt-get install \
     -y --no-install-recommends \
     $buildDeps \
     ruby-bundler \
<% end %>
    && bundle config silence_root_warning true \
    && bundle install --gemfile=/fluentd/Gemfile --path=/fluentd/vendor/bundle \
<% if is_alpine %>
    && apk del .build-deps \
<% else %>
    && SUDO_FORCE_REMOVE=yes \
    apt-get purge -y --auto-remove \
                  -o APT::AutoRemove::RecommendsImportant=false \
                  $buildDeps \
 && rm -rf /var/lib/apt/lists/* \
<% end %>
    && gem sources --clear-all \
    && rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem

# Copy configuration files
COPY ./conf/fluent.conf /fluentd/etc/
<% if !is_alpine %>
COPY ./conf/systemd.conf /fluentd/etc/
<% end %>
COPY ./conf/kubernetes.conf /fluentd/etc/

# Copy plugins
COPY plugins /fluentd/plugins/
COPY entrypoint.sh /fluentd/entrypoint.sh

# Environment variables
ENV FLUENTD_OPT=""
ENV FLUENTD_CONF="fluent.conf"

# jemalloc is memory optimization only available for td-agent
# td-agent is provided and QA'ed by treasuredata as rpm/deb/.. package
# -> td-agent (stable) vs fluentd (edge)
#ENV LD_PRELOAD="/usr/lib/libjemalloc.so.2"

# Run Fluentd
CMD ["/fluentd/entrypoint.sh"]
